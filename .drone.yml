kind: pipeline
name: test
type: docker

trigger:
  branch:
    - main
#  event:
#    - push
#    - tag

node:
  location: staging

steps:
  - name: Test
    pull: if-not-exists
    image: golang:1.17-alpine
    environment:
      CGO_ENABLED: 0
      GOCACHE: /tmp/cache/go-build # Change the go build cache to a persistent folder
      GOMODCACHE: /tmp/cache/pkg.mod # Change the go module cache to a persistent folder
    commands:
      - apk add git
      - mkdir -p /tmp/cache/go-build /tmp/cache/pkg.mod # Make sure the cache folders exist
      - go test -v ./...
    volumes:
      - name: cache
        path: /tmp/cache

volumes:
  - name: cache
    host:
      path: /root/.buildcache

---
kind: pipeline
name: deploy_staging
type: docker

node:
  location: staging

depends_on:
  - test

trigger:
  branch:
    - main

steps:
  - name: Build Docker container
    pull: if-not-exists
    image: docker
    environment:
      DOCKER_BUILDKIT: 1 # This enables the docker build cache (this is NOT the dockerfile layers cache)
    commands:
      - docker build --memory 1.5GB -t rtcv:latest .
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock

  - name: Deploy Docker container
    pull: if-not-exists
    image: docker
    commands:
      - docker rm -f rtcv # Remove the old container
      - /root/dockerRunScript # Run the script to deploy the container
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock
      - name: dockerRunEnv
        path: /root/rtcv.env
      - name: dockerRunScript
        path: /root/dockerRunScript

volumes:
  - name: dockerSocket
    host:
      path: /var/run/docker.sock
  - name: dockerRunEnv
    host:
      path: /root/rtcv.env
  - name: dockerRunScript
    host:
      path: /root/rtcv.sh

---
kind: pipeline
name: deploy_production
type: docker

node:
  location: production

depends_on:
  - test

trigger:
  branch:
    - main
#  event:
#    - push
#    - tag

steps:
  - name: Build Docker container
    pull: if-not-exists
    image: docker
    environment:
      DOCKER_BUILDKIT: 1 # This enables the docker build cache (this is NOT the dockerfile layers cache)
    commands:
      - docker build --memory 1.5GB -t rtcv:latest .
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock

  - name: Deploy Docker container
    pull: if-not-exists
    image: docker
    commands:
      - docker rm -f rtcv # Remove the old container
      - /root/dockerRunScript # Run the script to deploy the container
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock
      - name: dockerRunEnv
        path: /root/rtcv.env
      - name: dockerRunScript
        path: /root/dockerRunScript

volumes:
  - name: dockerSocket
    host:
      path: /var/run/docker.sock
  - name: dockerRunEnv
    host:
      path: /root/rtcv.env
  - name: dockerRunScript
    host:
      path: /root/rtcv.sh

---
kind: pipeline
name: notify_slack
type: docker

node:
  location: staging

depends_on:
  - deploy_production
  - deploy_staging

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel:
        from_secret: slack_webhook_channel
      username: drone
